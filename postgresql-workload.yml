apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-postgresql-data
  namespace: airflow
  annotations:
    everest.io/disk-volume-type: SAS    # EVS disk type.
  labels:
    # Region of the node where the application is to be deployed.
    failure-domain.beta.kubernetes.io/region: sa-brazil-1
    # AZ of the node where the application is to be deployed.
    failure-domain.beta.kubernetes.io/zone: sa-brazil-1a
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: csi-disk
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: ''
  labels:
    appgroup: ''
    version: v1
  name: postgresql
  namespace: airflow
spec:
  selector:
    matchLabels:
      app: postgresql
      version: v1
  template:
    metadata:
      labels:
        app: postgresql
        version: v1
    spec:
      containers:
        - name: postgresql
          image: docker.io/postgres:14.10-alpine3.19
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_PASSWORD
              value: G35*******************BgH
            - name: POSTGRES_USER
              value: airflow
            - name: POSTGRES_DB
              value: airflow
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: pvc-postgresql-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits: {}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      volumes:
        - name: pvc-postgresql-data
          persistentVolumeClaim:
            claimName: pvc-postgresql-data
      initContainers: []
  serviceName: postgresql
  replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
    version: v1
  namespace: airflow
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
spec:
  selector:
    app: postgresql
    version: v1
  clusterIP: None
  ports:
    - name: postgresql
      targetPort: 5432
      nodePort: 0
      port: 5432
      protocol: TCP
  type: ClusterIP
